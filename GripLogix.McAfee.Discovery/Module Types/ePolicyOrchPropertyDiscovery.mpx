<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><TypeDefinitions>
    <ModuleTypes>
      <!-- DataSource.ePolicyOrchPropertyDiscovery -->
      <DataSourceModuleType ID="GripLogix.McAfee.DataSource.ePolicyOrchPropertyDiscovery" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="InstallPath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SearchFileInstallPath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SearchPattern" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="StripPattern" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="InstallPath" Selector="$Config/InstallPath$" ParameterType="string" />
          <OverrideableParameter ID="SearchFileInstallPath" Selector="$Config/SearchFileInstallPath$" ParameterType="string" />
          <OverrideableParameter ID="SearchPattern" Selector="$Config/SearchPattern$" ParameterType="string" />
          <OverrideableParameter ID="StripPattern" Selector="$Config/StripPattern$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Discovery.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval Unit="Seconds">$Config/IntervalSeconds$</Interval>
                    <SyncTime />
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PowerShellProbe" TypeID="GripLogix.McAfee.Probe.ePolicyOrchPropertyDiscovery">
                <InstallPath>$Config/InstallPath$</InstallPath>
                <SearchFileInstallPath>$Config/SearchFileInstallPath$</SearchFileInstallPath>
                <SearchPattern>$Config/SearchPattern$</SearchPattern>
                <StripPattern>$Config/StripPattern$</StripPattern>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <ComputerName>$Config/ComputerName$</ComputerName>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PowerShellProbe">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <!-- Probe.ePolicyOrchPropertyDiscovery-->
      <ProbeActionModuleType ID="GripLogix.McAfee.Probe.ePolicyOrchPropertyDiscovery" Accessibility="Public" Batching="false" PassThrough="false">
        <Configuration>
          <xsd:element name="InstallPath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SearchFileInstallPath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SearchPattern" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="StripPattern" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PowerShellProbe" TypeID="Windows!Microsoft.Windows.PowerShellDiscoveryProbe">
                <ScriptName>McAfeeEpolicyOrchestratorDiscovery.ps1</ScriptName>
                <ScriptBody>## Author: Merijn Overgaauw, GripLogix Consulting

param($SourceId, $ManagedEntityId, $InstallPath, $SearchFileInstallPath, $SearchPattern, $StripPattern, $ComputerName)

$params = "$SourceId, $ManagedEntityId, $SearchFolder, $ComputerName"
$debug = $true

# Constants used for event logging
$SCRIPT_NAME			= 'McAfeeEpolicyOrchestratorDiscovery.ps1'
$EVENT_LEVEL_ERROR 		= 1
$EVENT_LEVEL_WARNING 	= 2
$EVENT_LEVEL_INFO 		= 4

$SCRIPT_STARTED			= 971
$PROPERTYBAG_CREATED	= 972
$ERROR_GENERATED        = 973
$INFO_GENERATED         = 974
$SCRIPT_ENDED			= 975

#==================================================================================
# Sub:		LogDebugEvent
# Purpose:	Logs an informational event to the Operations Manager event log
#			only if Debug argument is true
#==================================================================================
function Log-DebugEvent
	{
		param($eventNo,$message)

		$message = "`n" + $message
		if ($debug)
		{
			$api.LogScriptEvent($SCRIPT_NAME,$eventNo,$EVENT_LEVEL_INFO,$message)
		}
	}
#==================================================================================

# Start script.
$API = New-Object -comObject 'MOM.ScriptAPI'
$DiscoveryData = $API.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)

$message = "$SCRIPT_NAME script started.`nParameters: $params"
Log-DebugEvent $SCRIPT_STARTED $message

$SearchFilePath = $InstallPath -replace ":.*"
$SearchFilePath = $SearchFilePath + $SearchFileInstallPath

Try
	{
	$Data = Select-String $SearchFilePath -Pattern $SearchPattern -ErrorAction Stop
	$Data = $Data -replace $StripPattern
	}
Catch
	{
	$errorMessage = "Select-String for $SearchFilePath failed`nError: $_.`n" 
	Log-DebugEvent $ERROR_GENERATED $errorMessage
	}

Switch -Wildcard ($SearchPattern)
{
    "*database.name*" 
		{
		$Instance = $DiscoveryData.CreateClassInstance("$MPElement[Name='GripLogix.McAfee.ePolicyOrchestrator']$")
		$Instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $ComputerName)
		$Instance.AddProperty("$MPElement[Name='GripLogix.McAfee.ePolicyOrchestrator']/Database$", $Data)
		}
	"*server.name*" 
		{
		$Instance = $DiscoveryData.CreateClassInstance("$MPElement[Name='GripLogix.McAfee.ePolicyOrchestrator']$")
		$Instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $ComputerName)
		$Instance.AddProperty("$MPElement[Name='GripLogix.McAfee.ePolicyOrchestrator']/DatabaseServer$", $Data)
		}
	"*version*" 
		{
		$Instance = $DiscoveryData.CreateClassInstance("$MPElement[Name='GripLogix.McAfee.ePolicyOrchestrator']$")
		$Instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $ComputerName)
		$Instance.AddProperty("$MPElement[Name='GripLogix.McAfee.ePolicyOrchestrator']/Version$", $Data)
		}
    default 
		{
		$errorMessage = "$SearchPattern is not a valid SearchPattern for $SCRIPT_NAME script."
		Log-DebugEvent $ERROR_GENERATED $errorMessage
		}
}

$DiscoveryData.AddInstance($Instance)

$DiscoveryData

$message = "$SCRIPT_NAME script ended.`nParameters: $params`nDiscovered Data for $SearchPattern is: $Data"
Log-DebugEvent $SCRIPT_ENDED $message</ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>SourceID</Name>
                    <Value>$MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ManagedEntityID</Name>
                    <Value>$Target/Id$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>InstallPath</Name>
                    <Value>$Config/InstallPath$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SearchFileInstallPath</Name>
                    <Value>$Config/SearchFileInstallPath$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SearchPattern</Name>
                    <Value>$Config/SearchPattern$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>StripPattern</Name>
                    <Value>$Config/StripPattern$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ComputerName</Name>
                    <Value>$Config/ComputerName$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PowerShellProbe" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
  </TypeDefinitions></ManagementPackFragment>
