<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><TypeDefinitions>
    <ModuleTypes>
      <!-- DataSource.WEBPageCheck.PropertyBag -->
      <DataSourceModuleType ID="GripLogix.WebMon.WEBPage.DataSource.WEBPageCheck.PropertyBag" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Name" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Url" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ContentChecked" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TCPPort" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Schedule" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Script" TypeID="GripLogix.WebMon.WEBPage.Probe.WEBPageCheck">
                <Name>$Config/Name$</Name>
                <Url>$Config/Url$</Url>
                <ContentChecked>$Config/ContentChecked$</ContentChecked>
                <ComputerName>$Config/ComputerName$</ComputerName>
                <TCPPort>$Config/TCPPort$</TCPPort>
                <Debug>$Config/Debug$</Debug>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script">
                <Node ID="Schedule" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <!-- Probe.WEBPageCheck -->
      <ProbeActionModuleType ID="GripLogix.WebMon.WEBPage.Probe.WEBPageCheck" Accessibility="Internal" Batching="false" PassThrough="false">
        <Configuration>
          <xsd:element name="Name" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Url" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ContentChecked" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TCPPort" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="Script" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>McAfeeePolicyUrlCheck.ps1</ScriptName>
                <ScriptBody>## Author: Merijn Overgaauw, GripLogix Consulting

#==================================================================================
## Get parameters
param($name, $url, $contentChecked, $computerName, $tcpPort, $debug)


## Constants used for event logging
$SCRIPT_NAME			= 'McAfeeePolicyUrlCheck.ps1'
$EVENT_LEVEL_ERROR 		= 1
$EVENT_LEVEL_WARNING 	= 2
$EVENT_LEVEL_INFO 		= 4

$SCRIPT_STARTED			= 1951
$PROPERTYBAG_CREATED	= 1952
$ERROR_GENERATED        = 1953
$SCRIPT_ENDED			= 1955

#==================================================================================
# Sub:		LogDebugEvent
# Purpose:	Logs an informational event to the Operations Manager event log
#			only if Debug argument is true
#==================================================================================
function Log-DebugEvent
{
	param($eventNo,$message)

	$message = "`n" + $message
	if ($debug -eq $true)
	{
		$api.LogScriptEvent($SCRIPT_NAME,$eventNo,$EVENT_LEVEL_INFO,$message)
	}
}
#==================================================================================
# Sub:		Get-Url
# Purpose:	Get (SSL) web page from url and ignore any SSL errors. This function 
#			can be used when no Powershell version 3.0 or higher has been installed.
#			In that case you cannot use the Invoke-WebRequest cmdlet.
#==================================================================================
function Get-Url
{
	param($url)
	[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}
	$wc = New-Object System.Net.WebClient
	$src = $wc.downloadstring($url)
	Return $src
}
#==================================================================================
# Sub:		Test-Port
# Purpose:	Use this function to test port connectivity in case the server does not 
#			have the cmdlet Test-NetConnection, which requires Powershell 3 or 
#			higher.
#==================================================================================
function Test-Port

{
    Param(
        [parameter(ParameterSetName='ComputerName', Position=0)]
        [string]
        $ComputerName,

        [parameter(ParameterSetName='IP', Position=0)]
        [System.Net.IPAddress]
        $IPAddress,

        [parameter(Mandatory=$true , Position=1)]
        [int]
        $Port

        )

    $RemoteServer = If ([string]::IsNullOrEmpty($ComputerName)) {$IPAddress} Else {$ComputerName};

    $test = New-Object System.Net.Sockets.TcpClient;
    Try
        {
        $test.Connect($RemoteServer, $Port)
        "True"
        }
    Catch
    {
        "False"
    }  
    
}
#===============================================================================

## Start script by setting up API object.
$api = New-Object -comObject 'MOM.ScriptAPI'
$message = "Script started"
Log-DebugEvent $SCRIPT_STARTED $message

## Request WEB Page.
Try {$response = Get-Url $url -ErrorAction Stop}		
Catch 
	{
	$debugInfo = $debugInfo + "Error occured for Get-Url for web page $name with url $url`n Error: $_. - `n"
	$tcpPortCheck = Test-Port -ComputerName localhost -Port $tcpPort
	}

## Content Check
If ($response)	
	{	
	$match = Select-String -InputObject $response -pattern $contentChecked -SimpleMatch
	If ($match) {$contentpatternCheckResult = "SUCCESS"; $debugInfo = $debugInfo + "Response has been compared to following text: $contentChecked; match succeeded - `n"}
	Else {$contentpatternCheckResult = "FAILED"; $debugInfo = $debugInfo + "Response has been compared to following text: $contentChecked; match failed - `n"}		
	}
Else {$contentpatternCheckResult = "FAILED"; $debugInfo = $debugInfo + "Error: No response retreived from $url to compare with the following text: $contentChecked - `n"}

## Create a property bag.
$bag = $api.CreatePropertyBag()

## Put the gathered statistics into the property bag.
$bag.AddValue('ContentMatch',$contentpatternCheckResult)
$bag.AddValue('TCPportCheck',$tcpPortCheck)
If ($debug -eq $true) {$bag.AddValue('Debug',$debugInfo)}

$message = "$name`nContent Match: $contentpatternCheckResult`nDebug: $debugInfo"
Log-DebugEvent $PROPERTYBAG_CREATED $message

## Return the property bag.
$bag
$message = "Script ended."
Log-DebugEvent $SCRIPT_ENDED $message

</ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>Name</Name>
                    <Value>$Config/Name$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Url</Name>
                    <Value>$Config/Url$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ContentChecked</Name>
                    <Value>$Config/ContentChecked$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ComputerName</Name>
                    <Value>$Config/ComputerName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>TCPPort</Name>
                    <Value>$Config/TCPPort$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Debug</Name>
                    <Value>$Config/Debug$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>300</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <!-- MonitorType.WEBPageCheck.Status -->
      <UnitMonitorType ID="GripLogix.WebMon.WEBPage.MonitorType.WEBPageCheck.Status" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="FAILED" NoDetection="false" />
          <MonitorTypeState ID="SUCCESS" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Name" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Url" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ContentChecked" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TCPPort" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="Url" Selector="$Config/Url$" ParameterType="string" />
          <OverrideableParameter ID="ContentChecked" Selector="$Config/ContentChecked$" ParameterType="string" />
          <OverrideableParameter ID="ComputerName" Selector="$Config/ComputerName$" ParameterType="string" />
          <OverrideableParameter ID="TCPPort" Selector="$Config/TCPPort$" ParameterType="string" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="GripLogix.WebMon.WEBPage.DataSource.WEBPageCheck.PropertyBag">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <Name>$Config/Name$</Name>
              <Url>$Config/Url$</Url>
              <ContentChecked>$Config/ContentChecked$</ContentChecked>
              <ComputerName>$Config/ComputerName$</ComputerName>
              <TCPPort>$Config/TCPPort$</TCPPort>
              <Debug>$Config/Debug$</Debug>
            </DataSource>
            <ConditionDetection ID="FilterSUCCESSStatus" TypeID="System!System.ExpressionFilter">
              <Expression>
                <Or>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='ContentMatch']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">SUCCESS</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='TCPportCheck']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">True</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </Or>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FilterFAILEDStatus" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='ContentMatch']</XPathQuery>
                      </ValueExpression>
                      <Operator>NotEqual</Operator>
                      <ValueExpression>
                        <Value Type="String">SUCCESS</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='TCPportCheck']</XPathQuery>
                      </ValueExpression>
                      <Operator>NotEqual</Operator>
                      <ValueExpression>
                        <Value Type="String">True</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="FAILED">
              <Node ID="FilterFAILEDStatus">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="SUCCESS">
              <Node ID="FilterSUCCESSStatus">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions></ManagementPackFragment>
